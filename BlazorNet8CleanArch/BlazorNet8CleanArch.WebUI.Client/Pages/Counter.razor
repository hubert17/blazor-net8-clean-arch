@page "/counter"
@attribute [Authorize(Roles = "staff")]

@inherits BlazorStateComponent
@using BlazorState
@using BlazorNet8CleanArch.Infrastructure.Handlers.BlazorStateHandler



<PageTitle>Counter</PageTitle>

<h1>Counter, Hello @Username - Role: @roles</h1>

<p role="status" class="gabs">Current count: @currentCount</p>

<MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="IncrementCount">Click me</MudButton>

@code {
    CounterState CounterState => GetState<CounterState>();
    int currentCount => CounterState.Count;

    async Task IncrementCount()
    {
        await Mediator.Send(new CounterState.IncrementCount(5));
    }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    private string Username = "";
    string roles = "";

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            Username = state?.User?.Identity?.Name ?? string.Empty;
            var crole = state?.User?.Claims.Where(c => c.Type == System.Security.Claims.ClaimTypes.Role).ToList();
            roles = string.Join(',', crole!.Select(s => s.Value));
        }
    }
}